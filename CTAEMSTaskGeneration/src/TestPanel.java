
	
	import java.awt.Color;
import java.util.ArrayList;
import java.util.List;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.StandardXYBarPainter;
import org.jfree.chart.renderer.xy.XYBarRenderer;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.xy.IntervalXYDataset;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

import project.Distribute;
import project.Generate;
import project.GenerateLoad;
import project.Method;
import sexpr.Parser;
import sexpr.Sexpr;

	/**
	 *
	 * @author abimbolaakinmeji
	 */
	
	@SuppressWarnings("serial")
	public class TestPanel extends javax.swing.JPanel {
	    ChartPanel chartPanel;
	   
	    double[] hist1;double[] hist2; String n1; String n2;
	    int bins, min, max;
	    /**
	     * Creates new form NewJPanel
	     */
	    public TestPanel( String n1, double[] hist1, String n2,double[] hist2, int bins, int min, int max) {
	        initComponents();
	        this.hist1 = hist1;
	        this.hist2 = hist2;
	        this.n1 = n1;
	        this.n2 = n2;
	        this.bins = bins;
	        this.min = min;
	        this.max = max;
	        createGraph();
	    }
	    
	  

	    /**
	     * This method is called from within the constructor to initialize the form.
	     * WARNING: Do NOT modify this code. The content of this method is always
	     * regenerated by the Form Editor.
	     */
	    @SuppressWarnings("unchecked")
	    private void initComponents() {

	        setLayout(new java.awt.GridBagLayout());
	    }                     


	                  

	  public final void createGraph() {
	        final IntervalXYDataset dataset = createDataset();
	        final JFreeChart chart = createChart(dataset);
	        chartPanel = new ChartPanel(chart);
	        chartPanel.setSize(400, 400);
	       // chartPanel.setLocation(40, 600);
	        this.add(chartPanel);
	    }
	    
	    private HistogramDataset createDataset() {
	    	
	    	
	       HistogramDataset dataset = new HistogramDataset();
	       dataset.addSeries(n1, hist1, bins, min, max);
	       dataset.addSeries(n2, hist2, bins, min, max);
	       //dataset.addSeries("Load", loadDistClone,loadDist.length+1,0,loadDist.length);
	       //dataset.addSeries("Generated Load", gl.loadhistogram(),loadDist.length+1,0,loadDist.length);
	       //dataset.addSeries("Structure Load", gl.structureloadhistogram(),loadDist.length+1,0,loadDist.length);
	       //dataset.addSeries("Open Time", gl.opentimehistogram(), opentimeDist.length+1,0,opentimeDist.length);
	       //dataset.addSeries("Generated Open Time", opentimeActual,opentimeDist.length+1,0,opentimeDist.length);
	       //dataset.addSeries("Time Pressure", gl.timePressurehist(), timepressureDist.length+1,0,timepressureDist.length);
	       //dataset.addSeries("Generated Time Pressure", gl.actualTimePressureHist(),timepressureDist.length+1,0,timepressureDist.length);
	       //dataset.addSeries("Reward", gl.rewardhistogram(), rewardDist.length+1,0,rewardDist.length);
	       //dataset.addSeries("Generated Reward", gl.actualRewardHist(),rewardDist.length+1,0,rewardDist.length);
	       
	       return dataset;
	        
	    }
	    
	    private JFreeChart createChart(final IntervalXYDataset dataset) {

			final JFreeChart chart;
	        chart = ChartFactory.createHistogram(
	                "Histogram Demo",      // chart title
	                "Session",                      // x axis label
	                "Value",                      // y axis label
	                dataset,                  // data
	                PlotOrientation.VERTICAL,
	                true,                     // include legend
	                true,                     // tooltips
	                false                     // urls
	        );

			// NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...
			chart.setBackgroundPaint(Color.white);

			chart.setBackgroundPaint(new Color(230,230,230));
	                 XYPlot xyplot = (XYPlot)chart.getPlot();
	                 xyplot.setForegroundAlpha(0.7F);
	                 xyplot.setBackgroundPaint(Color.WHITE);
	                 xyplot.setDomainGridlinePaint(new Color(150,150,150));
	                 xyplot.setRangeGridlinePaint(new Color(150,150,150));
	                 XYBarRenderer xybarrenderer = (XYBarRenderer)xyplot.getRenderer();
	                 xybarrenderer.setShadowVisible(false);
	                 xybarrenderer.setBarPainter(new StandardXYBarPainter()); 
//	    xybarrenderer.setDrawBarOutline(false);
			return chart;
		}



	}





